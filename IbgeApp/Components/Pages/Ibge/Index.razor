@page "/ibge"

@rendermode InteractiveServer
@inject ApplicationDbContext Context
@attribute [StreamRendering(true)]

<h1>Cidades</h1>

<a href="/ibge/create" class="btn btn-primary mb-5 mt-3">Cadastrar Nova Cidade</a>
<div class="mt-3 mb-5">
    <EditForm Model="@ibge" OnSubmit="@SearchAsync" FormName="SearchCity">
        <div class="mb-3 row">
            <div class="col">
                <InputText @bind-Value="searchId" class="form-control" placeholder="Informe o Id" />
            </div>
            <div class="col">
                <InputText @bind-Value="searchCity" class="form-control" placeholder="Informe a Cidade" />
            </div>
            <div class="col">
                <InputText @bind-Value="searchState" class="form-control" placeholder="Informe o Estado" />
            </div>
            <div class="col">
                <button type="submit" class="btn btn-primary">Pesquisar</button>
            </div>
        </div>
    </EditForm>
</div>


@if(Cities == null)
{
    <p class="fw-bold text-danger">Nenhum registro encontrado</p>
}
else
{
    <div class="align-content-center">
        <QuickGrid TGridItem="Ibge" Items="@Cities" Pagination="@pagination">
            <PropertyColumn Property="@(i => i.Id)" Sortable="true" />
            <PropertyColumn Property="@(i => i.City)" Sortable="true" Title="Cidade"/>
            <PropertyColumn Property="@(i => i.State)" Sortable="true" Title="Estado"/>
            <TemplateColumn Title="" TGridItem="Ibge">
                <a href="@("/ibge/details/" + context.Id)" class="btn btn-secondary">Detalhes</a>
            </TemplateColumn>
            <TemplateColumn Title="" TGridItem="Ibge">
                <a href="@("/ibge/edit/" + context.Id)" class="btn btn-warning">Editar</a>
            </TemplateColumn>
            <TemplateColumn Title="">
                <a href=@("/ibge/delete/" + context.Id) class="btn btn-danger">Excluir</a>
            </TemplateColumn>
        </QuickGrid>
    </div>
    <div class="pagination align-content-center">
        Cidades :
        <select @bind="@pagination.ItemsPerPage" class="form-select">
            <option selected>20</option>
            <option>50</option>
            <option>100</option>
        </select>
    </div>
    <Paginator State="@pagination" />
}

@code {
    public Ibge ibge { get; set; } = new();

    public IEnumerable<Ibge>? Ibges { get; set; }
    public IQueryable<Ibge>? Cities { get; set; }

    public IQueryable<Ibge>? FilteredCities { get; set; }

    [SupplyParameterFromForm]
    public string searchId { get; set; } = string.Empty;
    [SupplyParameterFromForm]
    public string searchCity { get; set; } = string.Empty;
    [SupplyParameterFromForm]
    public string searchState { get; set; } = string.Empty;

    PaginationState pagination = new PaginationState { ItemsPerPage = 20 };

    protected override async Task OnInitializedAsync()
    {
        Ibges = await Context.Ibge.AsNoTracking().ToListAsync();
        Cities = Ibges.AsQueryable();
    }

    private async Task SearchAsync()
    {
        if (!string.IsNullOrEmpty(searchId))
            Cities = Context.Ibge.Where(c => c.Id.ToString().Contains(searchId));
        else
        {
            if (!string.IsNullOrEmpty(searchCity))
                Cities = Context.Ibge.Where(c => c.City.Contains(searchCity)).AsQueryable();
        else
                Cities = Context.Ibge.Where(c => c.State.Contains(searchState)).AsQueryable();
        }
    }
}
